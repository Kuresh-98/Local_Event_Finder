@model Local_Event_Finder.ViewModels.PagedEventsViewModel
@{
    ViewData["Title"] = "Events";
    var isAdmin = User.IsInRole("Admin");
}
<div class="d-flex align-items-center mb-3 flex-wrap gap-2">
    <h1 class="m-0 me-3">Events <span class="badge bg-secondary align-middle" style="font-size:.6rem;"></span></h1>
    @if (isAdmin)
    {
        <a asp-action="Create" class="btn btn-accent btn-sm"><i class="bi bi-plus-circle"></i> Add</a>
    }
</div>
<div class="filter-panel">
    <h2 class="mb-3">Filter</h2>
    <form method="get" class="row gy-3 gx-3 align-items-end" autocomplete="off">
        <input type="hidden" name="sort" value="@Model.Sort" />
        <div class="col-lg-3 col-md-4">
            <label for="filterText" class="form-label filter-label">Search</label>
            <div class="input-group input-group-sm filter-search-group">
                <span class="input-group-text filter-addon"><i class="bi bi-search"></i></span>
                <input id="filterText" aria-label="Search text" name="text" value="@Model.SearchText" class="form-control" placeholder="Search title or description" />
            </div>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6">
            <label for="filterCity" class="form-label filter-label">City</label>
            <input id="filterCity" aria-label="City" name="city" value="@Model.City" class="form-control" placeholder="City" />
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6">
            <label for="filterCategory" class="form-label filter-label">Category</label>
            <input id="filterCategory" aria-label="Category" name="category" value="@Model.Category" class="form-control" placeholder="Category" />
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6">
            <label for="filterFrom" class="form-label filter-label">From</label>
            <input id="filterFrom" aria-label="From date" type="date" name="from" value="@(Model.From?.ToString("yyyy-MM-dd"))" class="form-control" />
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6">
            <label for="filterTo" class="form-label filter-label">To</label>
            <input id="filterTo" aria-label="To date" type="date" name="to" value="@(Model.To?.ToString("yyyy-MM-dd"))" class="form-control" />
        </div>
        <div class="col-lg-1 col-md-2 d-grid">
            <label class="form-label d-none d-lg-block filter-label">&nbsp;</label>
            <button class="btn btn-search btn-sm" type="submit" title="Apply filters">
                <i class="bi bi-search"></i>
                <span class="d-none d-md-inline ms-1">Search</span>
            </button>
        </div>
    </form>
</div>
@if (!Model.Events.Any())
{
    <div class="alert alert-warning">No events found.</div>
}
<div class="row g-4 mt-1">
@foreach (var e in Model.Events)
{
    <div class="col-md-4 col-sm-6 d-flex">
        <div class="event-card w-100">
            <div class="d-flex justify-content-between align-items-start">
                <span class="event-badge"><i class="bi bi-tag"></i> @e.Category</span>
                <span class="event-badge">@e.City</span>
            </div>
            @if (e.IsCancelled)
            {
                <div class="alert alert-danger mb-2 py-2">
                    <i class="bi bi-x-circle"></i> <strong>Event Cancelled</strong>
                </div>
            }
            <h3 class="event-title">@e.Title</h3>
            <div class="event-time"><i class="bi bi-clock"></i> @e.StartUtc.ToString("ddd, dd MMM yyyy HH:mm")</div>
            <div class="event-meta">
                <span><i class="bi bi-geo-alt"></i> @e.Venue</span>
                <span><i class="bi bi-person"></i> @e.Organizer</span>
                <span class="badge @(e.IsFree ? "badge-free" : "badge-paid")">@(e.IsFree ? "Free" : "Paid")</span>
                @if (e.TotalSeats.HasValue)
                {
                    <span><i class="bi bi-people"></i> @e.AvailableSeats/@e.TotalSeats seats</span>
                    @if (e.AvailableSeats == 0)
                    {
                        <span class="badge bg-danger">Sold Out</span>
                    }
                    else if (e.AvailableSeats <= 5)
                    {
                        <span class="badge bg-warning">Limited</span>
                    }
                }
            </div>
            <p class="small text-muted" style="flex-grow:1; margin-top:.25rem;">@e.Description.Substring(0, Math.Min(110, e.Description.Length))@(e.Description.Length > 110 ? "..." : "")</p>
            <div class="event-actions">
                <a asp-action="Details" asp-route-id="@e.Id" class="btn btn-sm btn-primary" title="View Details">
                    <i class="bi bi-eye"></i> Details
                </a>
                @if (isAdmin)
                {
                    <a asp-action="Edit" asp-route-id="@e.Id" class="btn btn-sm btn-edit" title="Edit Event">
                        <i class="bi bi-pencil-square"></i> Edit
                    </a>
                    <form asp-action="ToggleCancellation" asp-route-id="@e.Id" method="post" class="d-inline">
                        <button type="submit" class="btn btn-sm @(e.IsCancelled ? "btn-warning" : "btn-secondary")" 
                                title="@(e.IsCancelled ? "Uncancel Event" : "Cancel Event")"
                                onclick="return confirm('@(e.IsCancelled ? "Are you sure you want to uncancel this event?" : "Are you sure you want to cancel this event?")')">
                            <i class="bi @(e.IsCancelled ? "bi-check-circle" : "bi-x-circle")"></i> 
                            @(e.IsCancelled ? "Uncancel" : "Cancel")
                        </button>
                    </form>
                    <a asp-action="Delete" asp-route-id="@e.Id" class="btn btn-sm btn-delete" title="Delete Event">
                        <i class="bi bi-trash3"></i> Delete
                    </a>
                }
            </div>
        </div>
    </div>
}
</div>
@if (Model.TotalPages > 1)
{
    <div class="pagination-wrapper mt-5">
        <div class="pagination-container">
            @{
                var prevDisabled = Model.Page == 1 ? " disabled" : string.Empty;
                var nextDisabled = Model.Page == Model.TotalPages ? " disabled" : string.Empty;
            }
            
            <!-- Previous Button -->
            <a class="pagination-btn prev-btn@prevDisabled" 
               asp-route-page="@(Model.Page - 1)" 
               asp-route-sort="@Model.Sort" 
               asp-route-text="@Model.SearchText" 
               asp-route-city="@Model.City" 
               asp-route-category="@Model.Category" 
               asp-route-from="@(Model.From?.ToString("yyyy-MM-dd"))" 
               asp-route-to="@(Model.To?.ToString("yyyy-MM-dd"))">
                <i class="bi bi-chevron-left"></i>
                <span>Previous</span>
            </a>

            <!-- Page Numbers -->
            @for (var p = 1; p <= Model.TotalPages; p++)
            {
                var active = p == Model.Page ? " active" : string.Empty;
                <a class="pagination-btn page-btn@active" 
                   asp-route-page="@p" 
                   asp-route-sort="@Model.Sort" 
                   asp-route-text="@Model.SearchText" 
                   asp-route-city="@Model.City" 
                   asp-route-category="@Model.Category" 
                   asp-route-from="@(Model.From?.ToString("yyyy-MM-dd"))" 
                   asp-route-to="@(Model.To?.ToString("yyyy-MM-dd"))">@p</a>
            }

            <!-- Next Button -->
            <a class="pagination-btn next-btn@nextDisabled" 
               asp-route-page="@(Model.Page + 1)" 
               asp-route-sort="@Model.Sort" 
               asp-route-text="@Model.SearchText" 
               asp-route-city="@Model.City" 
               asp-route-category="@Model.Category" 
               asp-route-from="@(Model.From?.ToString("yyyy-MM-dd"))" 
               asp-route-to="@(Model.To?.ToString("yyyy-MM-dd"))">
                <span>Next</span>
                <i class="bi bi-chevron-right"></i>
            </a>
        </div>
        
        <!-- Page Info -->
        <div class="pagination-info">
            <span>Showing page <strong>@Model.Page</strong> of <strong>@Model.TotalPages</strong> â€¢ <strong>@Model.TotalItems</strong> total events</span>
        </div>
    </div>
}